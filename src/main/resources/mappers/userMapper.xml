<?xml version="1.0" encoding="UTF-8"?>

<!-- 이 xml은 mybatis 프레임워크 기반으로 인터페이스와 연동해서 동작하는 놈이구
	 이 xml의 규칙은 mybatis에서 정해놨음 dtd를 통해 이 xml의 규칙을 부여하겠다
-->

<!-- dtd : xml에서 사용된 태그를 정의한 문서 
	 mybatis에 dtd 기반으로 태그의 규칙이 적용이 됐다
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.jinju.spring.ex.jsp.repository.UserRepository">
 	
 	<insert id="insertUser" parameterType="map">
 		INSERT INTO
 			`new_user`
 		(
 			`name`
 			, `yyyymmdd`
 			, `email`
 		)
 		VALUE
 		(
 			#{name}
 			, #{birthday} <!-- 전달 받은 값(birthday 값)의 파람어노테이션의 키워드는 birthday임 -->
 			, #{email}
 		)
 	</insert>
 	
 	<insert id="insertUserByObject"
 	parameterType="com.jinju.spring.ex.jsp.domain.User"
 	useGeneratedKeys="true" keyProperty="id"><!-- insert 한 이후에 insert 된 그 행에 id 라는 컬럼에 매칭된 primary key를 얻어 내서 한번 더 조회를 해온다 라는 얘기 
 													조회해서 parameterType 으로 전달된 이 객체 안에 id와 매칭 되는 멤버 변수가 있으면 거기다가 값을 채워줄거임 -->
 		INSERT INTO
 			`new_user`
 		(
 			`name`
 			, `yyyymmdd`
 			, `email`
 		)
 		VALUE
 		(
 			<!-- 해당 하는 객체 안에 들어 있는 멤버 변수 값을 꺼내 오면 됨( 멤버 변수 이름으로 매칭 시켜 주면 됨 ) -->
 			#{name}
 			, #{yyyymmdd}
 			, #{email}
 		)
 	</insert>
 	
 	<select id="selectLastUser"
 	resultType="com.jinju.spring.ex.jsp.domain.User">
 		SELECT
 			`id`
 			, `name`
 			, `yyyymmdd`
 			, `email`
 			, `introduce`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`new_user`
 		ORDER BY
 			`id` DESC <!-- 내림차순 -->
 		LIMIT
 			1	
 	</select>
 	
 	<select id="selectUserList"
 	resultType="com.jinju.spring.ex.jsp.domain.User">
 		SELECT
 			`id`
 			, `name`
 			, `yyyymmdd`
 			, `email`
 			, `introduce`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`new_user`
 		ORDER BY
 			`id` DESC <!-- 내림차순 -->
 	</select>
 
 </mapper>